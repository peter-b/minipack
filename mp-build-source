#! /bin/sh
. mp-functions

build_source()
{
  : ${top_srcdir:=$name-$version}

  pkg_builddir=$builddir/$name-$version-$release/$top_srcdir
  pkg_instdir=$resultdir

  if [ ! -d $pkg_builddir ]; then
    echo "$0: Please unpack the source first."
    exit 1
  fi
  
  cd $pkg_builddir
  
  src_build && success
}

src_build()
{
  do_build
}

src_configure()
{
  do_configure
}

src_compile()
{
  do_compile
}

src_install()
{
  do_install
}

do_build()
{
  src_configure || fail
  src_compile || fail
  src_install || fail
}

do_configure()
{
  pkg_configure_opt=$configure_opt
  pkg_configure_opt="$pkg_configure_opt --prefix $pkg_instdir"
  if [ -n "$host" ]; then
    pkg_configure_opt="$pkg_configure_opt --host $host"
  fi
  if [ -n "$build" ]; then
    pkg_configure_opt="$pkg_configure_opt --build $build"
  fi

  if [ -z "$configure_no_more_flags" ]; then
    pkg_configure_opt="$pkg_configure_opt CPPFLAGS=-I$pkg_instdir/include"
    pkg_configure_opt="$pkg_configure_opt LDFLAGS=-L$pkg_instdir/lib"
  fi
  
  echo 'Configuring...' $host and $build
  mkdir -p ../logs
  ./configure $pkg_configure_opt > ../logs/configure.log
}

do_compile()
{
  echo 'Compiling...'
  mkdir -p ../logs
  make > ../logs/make.log
}

do_install()
{
  echo 'Installing...'
  mkdir -p ../logs
  make install > ../logs/install.log
}

fail()
{
  echo
  echo "============="
  echo "Build failed."
  echo "============="
  exit 1
}

success()
{
  echo
  echo "================"
  echo "Build succeeded."
  echo "================"
}

if [ -z "$1" ]; then
  echo "Usage: $0 package-name"
  exit 1
fi
name=$1

. $(get_recipe_name $name)

build_source
